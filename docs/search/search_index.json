{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SGraph MCP Server","text":"<p>Analyze large codebases using SGraph over the Model Context Protocol (MCP). Learn more about SGraph at the official docs: softagram.github.io/sgraph.</p> <ul> <li>High-performance search and dependency analysis</li> <li>Model overviews and navigation tools for IDE agents</li> <li>External dependency usage analysis for modernization and compliance</li> </ul> <p>Get started in minutes, generate architecture visualizations, and enable AI-driven refactoring.</p>"},{"location":"architecture/","title":"Architecture","text":""},{"location":"architecture/#overview","title":"Overview","text":"<p>The server exposes SGraph capabilities over MCP using FastMCP. Core layers:</p> <ul> <li>Core: model loading/caching (<code>ModelManager</code>), element conversion</li> <li>Services: overview, search, dependency analysis</li> <li>Tools: thin MCP adapters mapping requests to services</li> </ul>"},{"location":"architecture/#external-usage-analysis","title":"External Usage Analysis","text":"<p><code>sgraph_analyze_external_usage</code> walks internal elements (optionally in a scope) and aggregates outgoing edges to <code>/.../External/...</code> by language and package, returning totals and examples for quick audits.</p> <p>Further reading: SGraph concepts and formats \u2014 https://softagram.github.io/sgraph.</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#what-is-mcp","title":"What is MCP?","text":"<p>Model Context Protocol enables tools to communicate with AI agents and IDEs over a well-defined interface.</p>"},{"location":"faq/#how-do-i-get-a-model","title":"How do I get a model?","text":"<p>Generate an SGraph XML model with your pipeline, then use <code>sgraph_load_model(path)</code>. See SGraph docs for model formats: https://softagram.github.io/sgraph.</p>"},{"location":"faq/#can-i-limit-analyses-to-a-repo","title":"Can I limit analyses to a repo?","text":"<p>Yes, pass <code>scope_path</code>, e.g. <code>/sgraph-and-mcp/sgraph-mcp-server</code>.</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#install","title":"Install","text":"<pre><code>uv sync\n</code></pre>"},{"location":"getting-started/#run-the-server-sse","title":"Run the server (SSE)","text":"<pre><code>uv run src/server_modular.py\n</code></pre> <p>The server listens on <code>http://localhost:8008/sse</code>.</p>"},{"location":"getting-started/#configure-mcp-in-your-ide","title":"Configure MCP in your IDE","text":"<p>Add an MCP server named <code>sgraph-mcp</code> pointing to the SSE URL above. Then list tools and call <code>sgraph_load_model</code> with your model path.</p> <p>Tip: New to SGraph? See the library docs for data structures and formats: https://softagram.github.io/sgraph.</p>"},{"location":"getting-started/#quick-test-via-cli","title":"Quick test via CLI","text":"<pre><code>echo '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"tools/list\",\"params\":{}}' | npx -y mcp-remote http://localhost:8008/sse\n</code></pre>"},{"location":"mcp-tools/","title":"MCP Tools","text":""},{"location":"mcp-tools/#model-management","title":"Model Management","text":"<ul> <li><code>sgraph_load_model(path)</code> \u2192 <code>{ model_id }</code></li> <li><code>sgraph_get_model_overview(model_id, max_depth?, include_counts?)</code></li> </ul> <p>Reference: SGraph library docs at https://softagram.github.io/sgraph.</p>"},{"location":"mcp-tools/#navigation","title":"Navigation","text":"<ul> <li><code>sgraph_get_root_element(model_id)</code></li> <li><code>sgraph_get_element(model_id, element_path)</code></li> <li><code>sgraph_get_element_incoming_associations(model_id, element_path)</code></li> <li><code>sgraph_get_element_outgoing_associations(model_id, element_path)</code></li> </ul>"},{"location":"mcp-tools/#search","title":"Search","text":"<ul> <li><code>sgraph_search_elements_by_name(model_id, pattern, element_type?, scope_path?)</code></li> <li><code>sgraph_search_elements_by_attributes(model_id, attribute_filters, scope_path?)</code></li> <li><code>sgraph_get_elements_by_type(model_id, element_type, scope_path?)</code></li> </ul>"},{"location":"mcp-tools/#analysis","title":"Analysis","text":"<ul> <li><code>sgraph_get_subtree_dependencies(model_id, root_path, include_external?, max_depth?)</code></li> <li><code>sgraph_get_dependency_chain(model_id, element_path, direction?, max_depth?)</code></li> <li><code>sgraph_get_multiple_elements(model_id, element_paths[], additional_fields?)</code></li> <li><code>sgraph_analyze_external_usage(model_id, scope_path?)</code></li> </ul>"},{"location":"mcp-tools/#example-analyze-external-usage-scoped","title":"Example: Analyze External Usage (scoped)","text":"<pre><code>{\"jsonrpc\":\"2.0\",\"id\":3,\"method\":\"tools/call\",\"params\":{\"name\":\"sgraph_analyze_external_usage\",\"arguments\":{\"sgraph_analyze_external_usage\":{\"model_id\":\"&lt;MODEL_ID&gt;\",\"scope_path\":\"/sgraph-and-mcp/sgraph-mcp-server\"}}}}\n</code></pre>"}]}